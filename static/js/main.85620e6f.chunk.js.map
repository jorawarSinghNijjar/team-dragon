{"version":3,"sources":["contexts/DataContext.js","contexts/GameContext.js","contexts/UserContext.js","contexts/SnackbarContext.js","themes/theme.js","components/NavBar/styles.js","components/ProfileBar/styles.js","components/ProfileBar/ProfileBar.js","components/NavBar/NavBar.js","components/PrivateRoute/PrivateRoute.js","components/GlobalSnackbar/GlobalSnackbar.js","pages/Landing/styles.js","pages/Landing/Landing.js","pages/Register/styles.js","pages/Register/Register.js","pages/Login/styles.js","pages/Login/Login.js","components/new game/step 1/EmailInvite.js","components/new game/step 1/LinkInvite.js","components/new game/step 1/StepOne.js","socket.js","components/new game/step 2/StepTwo.js","components/new game/step 3/PlayerSelect.js","components/new game/step 3/RoleSelect.js","components/new game/step 3/StepThree.js","components/new game/NewGame.js","components/new game/WaitingRoom.js","components/GameBar/styles.js","components/GameBar/GameBar.js","components/Messenger/styles.js","components/Messenger/Messenger.js","components/PlayAgain/styles.js","components/PlayAgain/PlayAgain.js","components/GameOver/styles.js","components/GameOver/GameOver.js","components/Board/BoardCard/styles.js","components/Board/BoardCard/BoardCard.js","components/Board/styles.js","components/Board/Board.js","pages/Game/styles.js","pages/Game/Game.js","pages/GameSetup.js","components/EditNameDialog/EditNameDialog.js","pages/ProfileSettings.js","App.js","serviceWorker.js","index.js"],"names":["EmailContext","React","createContext","NewGameContext","PlayersContext","SpyMasterContext","HostNameContext","HostIdContext","useEmails","useContext","useNewGame","usePlayers","useSpyMaster","useHostName","useHostId","DataProvider","children","useState","emails","setEmails","providerEmails","useMemo","Number","window","localStorage","getItem","newGame","setNewGame","providerNewGame","players","setPlayers","providerPlayers","blue","red","spyMaster","setSpyMaster","providerSpyMaster","hostName","setHostName","providerHostName","hostId","setHostId","providerHostId","Provider","value","GameStatusContext","useGameStatus","GameProvider","gameStatus","setGameStatus","providerGameStatus","UserContext","useUser","UserProvider","user","setUser","providerUser","SnackbarOpenContext","useSnackbarOpen","SnackbarMessageContext","useSnackbarMessage","SnackbarProvider","props","open","setOpen","providerOpen","message","setMessage","providerMessage","colors","light","medium","grey","superLight","mediumDark","dark","white","black","theme","createMuiTheme","typography","fontFamily","fontSize","button","textTransform","h1","fontWeight","padding","margin","h3","palette","primary","main","contrastText","secondary","useStyles","makeStyles","NavBar","width","height","background","NavBarWrap","display","justifyContent","alignItems","Brand","letterSpacing","textDecoration","color","ProfileItem","Profile","cursor","UserName","flexDirection","ProfileBar","classes","profileImageUrl","setProfileImageUrl","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","useEffect","profileImageLocation","handleAuthentication","a","axios","post","logout","data","history","push","Box","className","Avatar","src","onClick","Typography","name","Button","variant","Snackbar","autoHideDuration","onClose","action","IconButton","size","aria-label","withRouter","to","PrivateRoute","Component","component","rest","render","location","pathname","GlobalSnackbar","anchorOrigin","vertical","horizontal","Landing","paddingTop","spacing","Card","textAlign","Heading","marginBottom","openDialog","setOpenDialog","error","setError","handleClose","createNewGame","getData","String","game","id","console","log","Container","maxWidth","Link","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Register","FormContainer","Form","TextField","setName","email","setEmail","password","setPassword","isLoading","setLoading","errors","setErrors","toPath","qs","parse","search","redirect","handleSubmit","e","preventDefault","password2","decoded","decode","token","defaults","headers","common","go","response","errObj","onSubmit","required","fullWidth","InputLabelProps","shrink","label","type","placeholder","onChange","target","undefined","helperText","disabled","length","Login","withCredentials","invite","item","EmailInvite","emailForm","setEmailForm","validate","setValidate","displayEmails","map","i","ListItem","key","ListItemIcon","ListItemText","mt","form","includes","isEmail","InputProps","endAdornment","InputAdornment","position","List","copy","copyConfirm","LinkInvite","useParams","copied","setCopy","href","Grid","container","direction","justify","my","text","onCopy","startIcon","inviteSection","StepOne","minHeight","xs","Divider","orientation","flexItem","socket","io","StepTwo","emit","gameId","on","host","_id","player","playerLabel","blueTeamColor","redTeamColor","BlueRadio","withStyles","root","checked","Radio","RedRadio","PlayerSelect","FormControl","FormLabel","RadioGroup","team","event","changeTeam","ele","FormControlLabel","control","formControl","minWidth","selectRedEmpty","backgroundColor","marginTop","selectBlueEmpty","redHelper","blueHelper","RoleSelect","displayTeam","useCallback","MenuItem","InputLabel","Select","labelId","prevState","displayEmpty","FormHelperText","disabledTitle","StepThree","displayPlayers","displayBlueRoles","bluePlayers","filter","displayRedRoles","redPlayers","m","mb","card","titleDivider","borderTop","NewGame","setItem","nextStep","startGame","setGame","spyMasters","playerAssign","gameDetails","removeItem","align","newGameSteps","mx","WaitingRoom","Scoreboard","BlueScore","currentTurn","borderRadius","RedScore","BlueTeam","marginRight","RedTeam","marginLeft","SpyMasterText","BarControls","NewGameButton","EndGameButton","GameBar","teamList","guesser","blueScore","redScore","stopGame","Messenger","overflow","backgroundImage","MessageContainer","isTurn","maxHeight","Message","MessageSender","MessageMsg","MessageMe","MessageMeMsg","MessageInput","Alert","fontStyle","YourTurn","ChatBar","zIndex","boxShadow","SendButton","DoneButton","messageInputColor","elRef","useRef","messageInput","setMessageInput","current","scrollTop","scrollHeight","messages","messageList","sender","uuid","ref","trim","sendMessage","isSpyMaster","changeTurn","timeOut","defaultProps","playAgainButton","PlayAgain","useHistory","popUpWindow","left","top","transform","fade","content","skullIcon","gameOver","gameOverText","endGame","winner","newGameButton","GameOver","Paper","alt","toString","clicked","transition","Red","Blue","Innocent","Assassin","BoardCard","styles","selectCard","cardIndex","join","word","Board","flexFlow","BoardCards","gridTemplateColumns","gridTemplateRows","gap","BoardBottom","Timer","timer","board","idx","Game","gridTemplateAreas","Gamebar","gridArea","setTeam","setMessages","setBoard","setIsSpyMaster","setCurrentTurn","setRedScore","setBlueScore","setTeamList","gameOverTest","setEndGame","setTimer","setSnackbarOpen","match","params","recv","state","blueTeam","points","redTeam","redIdx","findIndex","p","blueIdx","role","turn","prevMessages","off","method","msg","msgData","GameSetup","currentGame","EditNameDialog","result","closeDialog","title","heading","divider","border","avatar","editIcon","fileInput","userDetails","paddingLeft","imageDialog","updateUrlBtn","ProfileSettings","openEditNameDialog","setOpenEditNameDialog","profileImageFile","setProfileImageFile","handleFileInput","files","handleFileUpload","FormData","append","Input","htmlFor","uploadImage","App","setIsLoading","getProfile","get","Cookies","onLoad","exact","path","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85620e6f.chunk.js","sourcesContent":["import React, { useContext, useState, useMemo } from \"react\";\r\n\r\nconst EmailContext = React.createContext();\r\n\r\nconst NewGameContext = React.createContext();\r\n\r\nconst PlayersContext = React.createContext();\r\n\r\nconst SpyMasterContext = React.createContext();\r\n\r\nconst HostNameContext = React.createContext();\r\n\r\nconst HostIdContext = React.createContext();\r\n\r\n// Custom hook for Emails to be invited to game\r\nexport function useEmails() {\r\n  return useContext(EmailContext);\r\n}\r\n\r\n// Custom hook for new Game Data\r\nexport function useNewGame() {\r\n  return useContext(NewGameContext);\r\n}\r\n\r\n// Custom hook for getting accepted players\r\nexport function usePlayers() {\r\n  return useContext(PlayersContext);\r\n}\r\n\r\n// Custom hook for holding SpyMaster\r\nexport function useSpyMaster() {\r\n  return useContext(SpyMasterContext);\r\n}\r\n\r\n// Holds Host Name to display for Waiting Room.js\r\nexport function useHostName() {\r\n  return useContext(HostNameContext);\r\n}\r\n\r\n//Holds Host Id on Game Setup.js to determine if the user is a host.\r\nexport function useHostId() {\r\n  return useContext(HostIdContext);\r\n}\r\n\r\nexport function DataProvider({ children }) {\r\n  //Holds emails to be invited to game\r\n  const [emails, setEmails] = useState([]);\r\n  const providerEmails = useMemo(() => [emails, setEmails], [\r\n    emails,\r\n    setEmails,\r\n  ]);\r\n\r\n  //Holds New Game Steps for Host\r\n  const initialState = () =>\r\n    Number(window.localStorage.getItem(\"newGame\") || null);\r\n  const [newGame, setNewGame] = useState(initialState);\r\n\r\n  const providerNewGame = useMemo(() => [newGame, setNewGame], [\r\n    newGame,\r\n    setNewGame,\r\n  ]);\r\n\r\n  //Holds Players who have accepted game invite\r\n  const [players, setPlayers] = useState([]);\r\n\r\n  const providerPlayers = useMemo(() => [players, setPlayers], [\r\n    players,\r\n    setPlayers,\r\n  ]);\r\n\r\n  //Holds SpyMaster\r\n  const [spyMaster, setSpyMaster] = useState({ blue: \"\", red: \"\" });\r\n\r\n  const providerSpyMaster = useMemo(() => [spyMaster, setSpyMaster], [\r\n    spyMaster,\r\n    setSpyMaster,\r\n  ]);\r\n\r\n  const [hostName, setHostName] = useState(\"\");\r\n\r\n  const providerHostName = useMemo(() => [hostName, setHostName], [\r\n    hostName,\r\n    setHostName,\r\n  ]);\r\n\r\n  const [hostId, setHostId] = useState(\"\");\r\n  const providerHostId = useMemo(() => [hostId, setHostId], [\r\n    hostId,\r\n    setHostId,\r\n  ]);\r\n\r\n  return (\r\n    <NewGameContext.Provider value={providerNewGame}>\r\n      <EmailContext.Provider value={providerEmails}>\r\n        <PlayersContext.Provider value={providerPlayers}>\r\n          <SpyMasterContext.Provider value={providerSpyMaster}>\r\n            <HostNameContext.Provider value={providerHostName}>\r\n              <HostIdContext.Provider value={providerHostId}>\r\n                {children}\r\n              </HostIdContext.Provider>\r\n            </HostNameContext.Provider>\r\n          </SpyMasterContext.Provider>\r\n        </PlayersContext.Provider>\r\n      </EmailContext.Provider>\r\n    </NewGameContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext, useState, useMemo } from \"react\";\r\n\r\nconst GameStatusContext = React.createContext();\r\n\r\n// Custom hook to check if game has started\r\nexport function useGameStatus() {\r\n  return useContext(GameStatusContext);\r\n}\r\n\r\nexport function GameProvider({ children }) {\r\n  //Holds whether game has started\r\n  const [gameStatus, setGameStatus] = useState(\"setup\");\r\n  const providerGameStatus = useMemo(() => [gameStatus, setGameStatus], [\r\n    gameStatus,\r\n    setGameStatus,\r\n  ]);\r\n\r\n  return (\r\n    <GameStatusContext.Provider value={providerGameStatus}>\r\n      {children}\r\n    </GameStatusContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext, useState, useMemo } from \"react\";\r\n\r\nconst UserContext = React.createContext();\r\n\r\n// Custom hook for User Authentication status\r\nexport function useUser() {\r\n  return useContext(UserContext);\r\n}\r\n\r\nexport function UserProvider({ children }) {\r\n  //Holds User Information\r\n  const [user, setUser] = useState(null);\r\n\r\n  const providerUser = useMemo(() => [user, setUser], [user, setUser]);\r\n  return (\r\n    <UserContext.Provider value={providerUser}>{children}</UserContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst SnackbarOpenContext = React.createContext();\r\nconst useSnackbarOpen = () => React.useContext(SnackbarOpenContext);\r\n\r\nconst SnackbarMessageContext = React.createContext();\r\nconst useSnackbarMessage = () => React.useContext(SnackbarMessageContext);\r\n\r\nconst SnackbarProvider = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const providerOpen = React.useMemo(() => [open, setOpen], [open, setOpen]);\r\n\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const providerMessage = React.useMemo(() => [message, setMessage], [\r\n    message,\r\n    setMessage,\r\n  ]);\r\n\r\n  return (\r\n    <SnackbarOpenContext.Provider value={providerOpen}>\r\n      <SnackbarMessageContext.Provider value={providerMessage}>\r\n        {props.children}\r\n      </SnackbarMessageContext.Provider>\r\n    </SnackbarOpenContext.Provider>\r\n  );\r\n};\r\n\r\nexport { useSnackbarOpen, useSnackbarMessage, SnackbarProvider };\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst colors = {\r\n  red: {\r\n    //Red Team + Logged in Users chat bubble\r\n    light: \"#e6918a\",\r\n    medium: \"#f86255\",\r\n  },\r\n  blue: {\r\n    // Blue Team\r\n    light: \"#72b2ed\",\r\n    medium: \"#3a98f1\",\r\n  },\r\n  grey: {\r\n    // Background\r\n    superLight: \"#f8f7f6\",\r\n    // for clicked clue button\r\n    light: \"#ebf1f8\",\r\n    // other users' chat bubbles\r\n    medium: \"#ebebeb\",\r\n    // innocent color text,\r\n    mediumDark: \"#bfbfbf\",\r\n    // \"Send Invite\" on new game + \"Make Your Move\"\r\n    dark: \"#5d5d5d\",\r\n  },\r\n  // \"Copy\" Button for new game link\r\n  white: \"#ffffff\",\r\n  black: \"#000000\",\r\n};\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: 12,\r\n    button: {\r\n      textTransform: \"none\",\r\n    },\r\n    h1: {\r\n      fontSize: \"2rem\",\r\n      fontWeight: 600,\r\n      padding: 0,\r\n      margin: 0,\r\n    },\r\n    h3: {\r\n      fontSize: \"1.1rem\",\r\n      fontWeight: 600,\r\n      padding: 0,\r\n      margin: 0,\r\n    },\r\n  },\r\n\r\n  red: colors.red,\r\n  blue: colors.blue,\r\n  grey: colors.grey,\r\n  white: colors.white,\r\n  black: colors.black,\r\n  palette: {\r\n    primary: { main: \"#32be72\", contrastText: \"#fff\" }, // This is Green, for \"Create Game\", \"New Game\", \"Done\"\r\n    secondary: { main: \"#44456c\", contrastText: \"#fff\" },\r\n  },\r\n});\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  NavBar: {\r\n    width: \"100%\",\r\n    height: \"12vh\",\r\n    background: theme.white,\r\n  },\r\n  NavBarWrap: {\r\n    width: \"90%\",\r\n    height: \"100%\",\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  Brand: {\r\n    textTransform: \"uppercase\",\r\n    letterSpacing: \"0.6rem\",\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"black\",\r\n    },\r\n  },\r\n  ProfileItem: {\r\n    margin: \"0 .5rem\",\r\n  },\r\n  Profile: {\r\n    display: \"flex\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst font = \"'Sansita Swashed', cursive\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  ProfileItem: {\r\n    margin: \"0 .5rem\",\r\n  },\r\n  UserName: {\r\n    margin: \"0 .5rem\",\r\n    fontFamily: font,\r\n    fontWeight: \"bold\",\r\n  },\r\n  Profile: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Avatar,\r\n  Button,\r\n  Snackbar,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useUser } from \"../../contexts/UserContext\";\r\nimport { useGameStatus } from \"../../contexts/GameContext\";\r\nimport useStyles from \"./styles\";\r\nimport axios from \"axios\";\r\n\r\nconst ProfileBar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [, setGameStatus] = useGameStatus();\r\n  const [user, setUser] = useUser();\r\n  const [profileImageUrl, setProfileImageUrl] = useState(\"\");\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setProfileImageUrl(user.profileImageLocation);\r\n    }\r\n  }, [user]);\r\n\r\n  // Toggle Login and Logout\r\n  const handleAuthentication = async () => {\r\n    if (user) {\r\n      setUser(null);\r\n      setGameStatus(\"setup\");\r\n      const logout = await axios.post(\"/users/logout\");\r\n      setSnackbarMessage(logout.data.message);\r\n      setOpenSnackbar(true);\r\n      props.history.push(\"/\");\r\n    } else {\r\n      props.history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  const handleAvatarClick = () => {\r\n    props.history.push(\"/edit-profile\");\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.Profile}>\r\n      {user ? (\r\n        <>\r\n          <Avatar\r\n            src={profileImageUrl ? profileImageUrl : \"\"}\r\n            onClick={handleAvatarClick}\r\n            className={classes.ProfileItem}\r\n          ></Avatar>\r\n          <Typography color=\"secondary\" className={classes.UserName}>\r\n            {user.name}\r\n          </Typography>\r\n        </>\r\n      ) : null}\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        className={classes.ProfileItem}\r\n        onClick={handleAuthentication}\r\n      >\r\n        <Typography>{user ? \"Logout\" : \"Login\"}</Typography>\r\n      </Button>\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        autoHideDuration={6000}\r\n        onClose={() => setOpenSnackbar(false)}\r\n        message={snackbarMessage}\r\n        action={\r\n          <IconButton\r\n            size=\"small\"\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n            onClick={() => setOpenSnackbar(false)}\r\n          >\r\n            <CloseIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        }\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfileBar;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useGameStatus } from \"../../contexts/GameContext\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nimport ProfileBar from \"../ProfileBar\";\r\n\r\nconst NavBar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  // Contexts\r\n  const [gameStatus] = useGameStatus();\r\n\r\n  if (gameStatus === \"setup\") {\r\n    return (\r\n      <nav className={classes.NavBar}>\r\n        <Box className={classes.NavBarWrap}>\r\n          <Typography className={classes.Brand} variant=\"h3\">\r\n            <Link to=\"/\">Cluewords</Link>\r\n          </Typography>\r\n          <ProfileBar history={props.history} />\r\n        </Box>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default withRouter(NavBar);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useUser } from \"../../contexts/UserContext\";\r\n\r\n// Show the component only when the user is logged in\r\n// Otherwise, redirect the user to /login page\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const [user] = useUser();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={`/login?redirect=${props.location.pathname}`} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {\r\n  useSnackbarOpen,\r\n  useSnackbarMessage,\r\n} from \"../../contexts/SnackbarContext\";\r\n\r\nconst GlobalSnackbar = () => {\r\n  const [open, setOpen] = useSnackbarOpen();\r\n  const [message] = useSnackbarMessage();\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={() => setOpen(false)}\r\n      message={message}\r\n      action={\r\n        <IconButton\r\n          size=\"small\"\r\n          aria-label=\"close\"\r\n          color=\"inherit\"\r\n          onClick={() => setOpen(false)}\r\n        >\r\n          <CloseIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default GlobalSnackbar;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Landing: {\r\n    paddingTop: theme.spacing(4),\r\n  },\r\n  Card: {\r\n    padding: \"2rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  Heading: {\r\n    marginBottom: \"2rem\",\r\n  },\r\n  Button: {\r\n    margin: \"0 1rem\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNewGame } from \"../../contexts/DataContext\";\r\nimport { useUser } from \"../../contexts/UserContext\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Landing = (props) => {\r\n  const classes = useStyles();\r\n\r\n  //Holds Game ID + Template for Passing Roles to Server\r\n  const [, setNewGame] = useNewGame();\r\n  const [user] = useUser();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    setOpenDialog(false);\r\n    // If the error is: User not signed in\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  const createNewGame = async () => {\r\n    try {\r\n      const getData = await axios.post(\"/create-game\");\r\n\r\n      if (getData.data.error) {\r\n        setError(getData.data.error);\r\n        setOpenDialog(true);\r\n        return null;\r\n      }\r\n      await setNewGame(1);\r\n      await props.history.push(String(getData.data.game.id));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.Landing} maxWidth=\"md\">\r\n      <Card className={classes.Card}>\r\n        <Typography className={classes.Heading} variant=\"h2\">\r\n          Welcome to Cluewords!\r\n        </Typography>\r\n\r\n        {!user ? (\r\n          <Button\r\n            className={classes.Button}\r\n            component={Link}\r\n            to=\"/register\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            className={classes.Button}\r\n            onClick={createNewGame}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n          >\r\n            Create Game\r\n          </Button>\r\n        )}\r\n      </Card>\r\n      <Dialog open={openDialog} onClose={handleClose}>\r\n        <DialogTitle>{error}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Look's like you are not signed in yet!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Sign in\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Register: {\r\n    paddingTop: theme.spacing(4),\r\n  },\r\n  FormContainer: {\r\n    padding: \"2rem 4rem\",\r\n  },\r\n  Form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  TextField: {\r\n    fontFamily: theme.fontFamily,\r\n    margin: \"1rem 0\",\r\n  },\r\n  Button: {\r\n    margin: \"1rem 0\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport qs from \"query-string\";\r\nimport decode from \"jwt-decode\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useUser } from \"../../contexts/UserContext\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Register = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [, setUser] = useUser();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const toPath = qs.parse(props.location.search).redirect || \"/\";\r\n\r\n  const validateForm = () => {\r\n    return name.length > 0 && email.length > 0 && password.length > 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const { data } = await axios.post(\"/users/register\", {\r\n        name,\r\n        email,\r\n        password,\r\n        password2: password,\r\n      });\r\n\r\n      // save user data\r\n      const decoded = decode(data.token);\r\n      setUser({ id: decoded.id, email: decoded.email, name: decoded.name });\r\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${data.token}`;\r\n\r\n      // redirect back to either game or landing page\r\n      props.history.push(toPath);\r\n      props.history.go();\r\n    } catch (err) {\r\n      if (err.response) {\r\n        const errObj = err.response.data;\r\n        setErrors(errObj.errors);\r\n      } else {\r\n        // TODO: handle generic errors\r\n        console.log(err.message);\r\n      }\r\n\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.Register} maxWidth=\"sm\">\r\n      <Card className={classes.FormContainer}>\r\n        <form className={classes.Form} onSubmit={handleSubmit}>\r\n          <Typography variant=\"h3\">Sign Up</Typography>\r\n\r\n          <TextField\r\n            className={classes.TextField}\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            label=\"Name:\"\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"Enter your name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            error={errors.name !== undefined}\r\n            helperText={errors.name}\r\n          />\r\n\r\n          <TextField\r\n            className={classes.TextField}\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            label=\"Email:\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            error={errors.email !== undefined}\r\n            helperText={errors.email}\r\n          />\r\n\r\n          <TextField\r\n            className={classes.TextField}\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            label=\"Password:\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            error={errors.password !== undefined}\r\n            helperText={errors.password}\r\n          />\r\n\r\n          <Button\r\n            className={classes.Button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            disabled={isLoading || !validateForm()}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n\r\n          <Typography variant=\"body1\">\r\n            Already have an account?{\" \"}\r\n            <Link to={`/login?redirect=${toPath}`}>Sign In</Link>\r\n          </Typography>\r\n        </form>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Login: {\r\n    paddingTop: theme.spacing(4),\r\n  },\r\n  FormContainer: {\r\n    padding: \"2rem 4rem\",\r\n  },\r\n  Form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  TextField: {\r\n    fontFamily: theme.fontFamily,\r\n    margin: \"1rem 0\",\r\n  },\r\n  Button: {\r\n    margin: \"1rem 0\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport qs from \"query-string\";\r\nimport decode from \"jwt-decode\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useUser } from \"../../contexts/UserContext\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [, setUser] = useUser();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const toPath = qs.parse(props.location.search).redirect || \"/\";\r\n\r\n  const validateForm = () => {\r\n    return email.length > 0 && password.length > 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/users/login\",\r\n        {\r\n          email,\r\n          password,\r\n        },\r\n        { withCredentials: true },\r\n      );\r\n\r\n      // save user data\r\n      const decoded = decode(data.token);\r\n      setUser({\r\n        id: decoded.id,\r\n        email: decoded.email,\r\n        name: decoded.name,\r\n        profileImageLocation: decoded.profileImageLocation,\r\n      });\r\n\r\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${data.token}`;\r\n      // redirect back to either game or landing page\r\n      props.history.push(toPath);\r\n      props.history.go();\r\n    } catch (err) {\r\n      if (err.response) {\r\n        console.log(err.response.data);\r\n        const errObj = err.response.data;\r\n        setErrors(errObj.errors);\r\n      } else {\r\n        // TODO: handle generic errors\r\n        console.log(err.message);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <Container className={classes.Login} maxWidth=\"sm\">\r\n      <Card className={classes.FormContainer}>\r\n        <form className={classes.Form} onSubmit={handleSubmit}>\r\n          <Typography variant=\"h3\">Sign In</Typography>\r\n\r\n          <TextField\r\n            className={classes.TextField}\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            label=\"Email:\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            error={errors.email !== undefined}\r\n            helperText={errors.email}\r\n          />\r\n\r\n          <TextField\r\n            className={classes.TextField}\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            label=\"Password:\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            error={errors.password !== undefined}\r\n            helperText={errors.password}\r\n          />\r\n\r\n          <Button\r\n            className={classes.Button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            disabled={isLoading || !validateForm()}\r\n          >\r\n            Sign In\r\n          </Button>\r\n\r\n          <Typography variant=\"body1\">\r\n            Don't have an account?{\" \"}\r\n            <Link to={`/register?redirect=${toPath}`}>Sign Up</Link>\r\n          </Typography>\r\n        </form>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { useEmails } from \"../../../contexts/DataContext\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  InputAdornment,\r\n  List,\r\n  ListItemIcon,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  invite: {\r\n    background: theme.grey.dark,\r\n    color: theme.white,\r\n  },\r\n  item: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nconst EmailInvite = () => {\r\n  const [emails, setEmails] = useEmails();\r\n\r\n  const [emailForm, setEmailForm] = useState(\"\");\r\n  const [validate, setValidate] = useState({ error: false, message: \"\" });\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Prevents empty tag submission\r\n    if (emailForm === \"\") {\r\n      setValidate({ error: false, message: \"\" });\r\n      return; //needs additional logic to verify if valid email address\r\n    }\r\n\r\n    if (emails.includes(emailForm)) {\r\n      setValidate({ error: true, message: \"User already invited\" });\r\n      setEmailForm(\"\");\r\n      return;\r\n    }\r\n\r\n    if (!isEmail(emailForm)) {\r\n      setValidate({ error: true, message: \"Not a valid email address\" });\r\n      return;\r\n    }\r\n    setValidate({ error: false, message: \"\" });\r\n    setEmails([...emails, emailForm]);\r\n    setEmailForm(\"\");\r\n  };\r\n\r\n  const displayEmails = emails.map((email, i) => {\r\n    return (\r\n      <ListItem className={classes.item} key={i}>\r\n        <ListItemIcon>\r\n          <CheckIcon color=\"primary\" />\r\n        </ListItemIcon>\r\n        <ListItemText primary={email} />\r\n      </ListItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h3\">Invite friends via email:</Typography>\r\n      <Box mt={\".8rem\"}>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <TextField\r\n            label=\"Email Address\"\r\n            variant=\"outlined\"\r\n            value={emailForm}\r\n            error={validate.error === true}\r\n            helperText={validate.message}\r\n            onChange={(e) => setEmailForm(e.target.value)}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={classes.invite}\r\n                    type=\"submit\"\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </form>\r\n        {emails.length > 0 && (\r\n          <div>\r\n            <List>{displayEmails}</List>\r\n          </div>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailInvite;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Button, Typography, Box, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  copy: {\r\n    background: theme.white,\r\n  },\r\n  copyConfirm: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst LinkInvite = (props) => {\r\n  const classes = useStyles();\r\n\r\n  //Holds Game ID to be copied and shared with other players\r\n  let { id } = useParams();\r\n\r\n  const [copy, setCopy] = useState({\r\n    value: \"\",\r\n    copied: false,\r\n  });\r\n  useEffect(() => {\r\n    setCopy({\r\n      value: window.location.href,\r\n      copied: false,\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Typography variant=\"h3\">Or share link:</Typography>\r\n        <Box my={\".8rem\"}>\r\n          <CopyToClipboard\r\n            text={copy.value}\r\n            onCopy={() =>\r\n              setCopy({\r\n                value: window.location.href,\r\n                copied: true,\r\n              })\r\n            }\r\n          >\r\n            <Button\r\n              startIcon={<LinkIcon />}\r\n              variant=\"contained\"\r\n              className={classes.copy}\r\n            >\r\n              Copy\r\n            </Button>\r\n          </CopyToClipboard>\r\n        </Box>\r\n        {copy.copied ? (\r\n          <span className={classes.copyConfirm}>Copied.</span>\r\n        ) : null}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LinkInvite;\r\n","import React from \"react\";\r\nimport EmailInvite from \"./EmailInvite\";\r\nimport LinkInvite from \"./LinkInvite\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Divider, Grid, Box } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inviteSection: {\r\n    margin: \"2rem\",\r\n  },\r\n}));\r\n\r\nconst StepOne = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Box mt={5} minHeight={170}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          alignItems=\"center\"\r\n          className={classes.inviteSection}\r\n        >\r\n          <Grid item xs={7}>\r\n            <EmailInvite />\r\n          </Grid>\r\n          <Divider orientation=\"vertical\" flexItem />\r\n          <Grid item xs>\r\n            <LinkInvite />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n","import io from \"socket.io-client\";\r\nconst socket = io(\"https://cluewords-api.herokuapp.com/\");\r\n\r\nexport default socket;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  usePlayers,\r\n  useHostName,\r\n  useHostId,\r\n} from \"../../../contexts/DataContext\";\r\nimport { useGameStatus } from \"../../../contexts/GameContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  List,\r\n  ListItemIcon,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport socket from \"../../../socket\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nconst StepTwo = (props) => {\r\n  const [, setGameStatus] = useGameStatus();\r\n  const [players, setPlayers] = usePlayers();\r\n  const [, setHostName] = useHostName();\r\n  const [, setHostId] = useHostId();\r\n  const { id } = useParams();\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    // User joins the room\r\n    console.log(\"joining game\", id);\r\n    socket.emit(\"join-game\", {\r\n      gameId: id,\r\n    });\r\n\r\n    socket.on(\"update-players\", (game) => {\r\n      console.log(\"Updated players:\", game.players);\r\n      setGameStatus(game.gameStatus);\r\n      setPlayers(game.players);\r\n      setHostId(game.host._id);\r\n      setHostName(game.host.name);\r\n    });\r\n  }, [id, setHostId, setHostName, setPlayers, setGameStatus]);\r\n\r\n  const showPlayers = () => {\r\n    return players.map((player, i) => {\r\n      return (\r\n        <ListItem className={classes.item} key={i}>\r\n          <ListItemIcon>\r\n            <CheckCircleIcon color=\"primary\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary={player.name} />\r\n        </ListItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box height={200}>\r\n        <Typography variant=\"h3\">Players Joined:</Typography>\r\n        <List>{showPlayers()}</List>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepTwo;\r\n","import React from \"react\";\r\nimport {\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { red, blue } from \"@material-ui/core/colors\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  playerLabel: (newGame) => ({\r\n    color: newGame === 3 ? theme.grey.dark : theme.grey.mediumDark,\r\n    fontSize: \"1.1rem\",\r\n    marginBottom: \".5rem\",\r\n  }),\r\n}));\r\n\r\nconst blueTeamColor = blue[500];\r\nconst redTeamColor = red[500];\r\n\r\nconst BlueRadio = withStyles({\r\n  root: {\r\n    color: blueTeamColor,\r\n    \"&$checked\": {\r\n      color: blueTeamColor,\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst RedRadio = withStyles({\r\n  root: {\r\n    color: redTeamColor,\r\n    \"&$checked\": {\r\n      color: redTeamColor,\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst PlayerSelect = (props) => {\r\n  const classes = useStyles(props.newGame);\r\n\r\n  const handleChange = (event) => {\r\n    const { id, name } = props.player;\r\n    let changeTeam = props.players;\r\n    changeTeam[props.ele] = { id, name, team: event.target.value };\r\n    props.setPlayers([...changeTeam]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel className={classes.playerLabel} component=\"legend\">\r\n          {props.player.name}\r\n        </FormLabel>\r\n        <RadioGroup\r\n          aria-label=\"team\"\r\n          name=\"team1\"\r\n          value={props.player.team || \"\"}\r\n          onChange={handleChange}\r\n        >\r\n          <FormControlLabel\r\n            value=\"blue\"\r\n            control={<BlueRadio />}\r\n            label=\"Blue Team\"\r\n            disabled={props.newGame !== 3}\r\n          />\r\n          <FormControlLabel\r\n            value=\"red\"\r\n            control={<RedRadio />}\r\n            label=\"Red Team\"\r\n            disabled={props.newGame !== 3}\r\n          />\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlayerSelect;\r\n","import React, { useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  InputLabel,\r\n  MenuItem,\r\n  FormHelperText,\r\n  FormControl,\r\n  Select,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectRedEmpty: (newGame) => ({\r\n    backgroundColor: newGame === 4 ? theme.red.light : theme.grey.medium,\r\n    marginTop: theme.spacing(2),\r\n  }),\r\n  selectBlueEmpty: (newGame) => ({\r\n    backgroundColor: newGame === 4 ? theme.blue.light : theme.grey.medium,\r\n    marginTop: theme.spacing(2),\r\n  }),\r\n  redHelper: (newGame) => ({\r\n    color: newGame === 4 ? theme.red.medium : theme.grey.medium,\r\n  }),\r\n  blueHelper: (newGame) => ({\r\n    color: newGame === 4 ? theme.blue.medium : theme.grey.medium,\r\n  }),\r\n}));\r\n\r\nconst RoleSelect = (props) => {\r\n  const classes = useStyles(props.newGame);\r\n\r\n  const handleChange = (event) => {\r\n    if (props.color === \"red\") {\r\n      props.setSpyMaster((prevState) => ({\r\n        ...prevState,\r\n        red: event.target.value,\r\n      }));\r\n    }\r\n\r\n    if (props.color === \"blue\") {\r\n      props.setSpyMaster((prevState) => ({\r\n        ...prevState,\r\n        blue: event.target.value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const displayTeam = useCallback(() => {\r\n    if (props.team.length < 1) return <MenuItem value=\"empty\">Empty</MenuItem>;\r\n    return props.team.map((ele, i) => {\r\n      return (\r\n        <MenuItem key={i} value={ele.id}>\r\n          {ele.name}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  }, [props.team]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n            SpyMaster\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={\r\n              props.color === \"red\" ? props.spyMaster.red : props.spyMaster.blue\r\n            }\r\n            onChange={handleChange}\r\n            disabled={props.newGame === 3}\r\n            displayEmpty\r\n            className={\r\n              props.color === \"red\"\r\n                ? classes.selectRedEmpty\r\n                : classes.selectBlueEmpty\r\n            }\r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>Select</em>\r\n            </MenuItem>\r\n            {displayTeam()}\r\n          </Select>\r\n          {props.color === \"red\" ? (\r\n            <FormHelperText className={classes.redHelper}>\r\n              Team Red\r\n            </FormHelperText>\r\n          ) : (\r\n            <FormHelperText className={classes.blueHelper}>\r\n              Team Blue\r\n            </FormHelperText>\r\n          )}\r\n        </FormControl>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoleSelect;\r\n","import React, { useCallback } from \"react\";\r\nimport PlayerSelect from \"./PlayerSelect\";\r\nimport RoleSelect from \"./RoleSelect\";\r\nimport {\r\n  usePlayers,\r\n  useSpyMaster,\r\n  useNewGame,\r\n} from \"../../../contexts/DataContext\";\r\nimport { Grid, Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  disabledTitle: {\r\n    color: theme.grey.mediumDark,\r\n  },\r\n}));\r\n\r\nconst StepThree = () => {\r\n  const [players, setPlayers] = usePlayers();\r\n  const [spyMaster, setSpyMaster] = useSpyMaster();\r\n  const [newGame] = useNewGame();\r\n  const classes = useStyles();\r\n\r\n  const displayPlayers = useCallback(() => {\r\n    return players.map((player, i) => {\r\n      return (\r\n        <PlayerSelect\r\n          key={i}\r\n          ele={i}\r\n          player={player}\r\n          players={players}\r\n          setPlayers={setPlayers}\r\n          spyMaster={spyMaster}\r\n          setSpyMaster={setSpyMaster}\r\n          newGame={newGame}\r\n        />\r\n      );\r\n    });\r\n  }, [players, setPlayers, spyMaster, setSpyMaster, newGame]);\r\n\r\n  const displayBlueRoles = useCallback(() => {\r\n    const bluePlayers = players.filter((player) => player.team === \"blue\");\r\n    return (\r\n      <RoleSelect\r\n        team={bluePlayers}\r\n        color={\"blue\"}\r\n        spyMaster={spyMaster}\r\n        setSpyMaster={setSpyMaster}\r\n        newGame={newGame}\r\n      />\r\n    );\r\n  }, [players, spyMaster, setSpyMaster, newGame]);\r\n\r\n  const displayRedRoles = useCallback(() => {\r\n    const redPlayers = players.filter((player) => player.team === \"red\");\r\n    return (\r\n      <Grid item>\r\n        <RoleSelect\r\n          team={redPlayers}\r\n          color={\"red\"}\r\n          spyMaster={spyMaster}\r\n          setSpyMaster={setSpyMaster}\r\n          newGame={newGame}\r\n        />\r\n      </Grid>\r\n    );\r\n  }, [players, spyMaster, setSpyMaster, newGame]);\r\n\r\n  return (\r\n    <>\r\n      <Box m={3}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-evenly\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Box mb=\"1.5rem\">\r\n            <Typography\r\n              className={newGame !== 3 ? classes.disabledTitle : null}\r\n              variant=\"h3\"\r\n            >\r\n              Assign Teams\r\n            </Typography>\r\n          </Box>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            {displayPlayers()}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Box mb={4}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-evenly\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Box mb=\"1.5rem\">\r\n            <Typography\r\n              className={newGame !== 4 ? classes.disabledTitle : null}\r\n              variant=\"h3\"\r\n            >\r\n              Assign SpyMaster\r\n            </Typography>\r\n          </Box>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={4}\r\n          >\r\n            <Grid item>{displayBlueRoles()}</Grid>\r\n            <Grid item>{displayRedRoles()}</Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepThree;\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport StepOne from \"../new game/step 1/StepOne\";\r\nimport StepTwo from \"../new game/step 2/StepTwo.js\";\r\nimport StepThree from \"../new game/step 3/StepThree.js\";\r\nimport {\r\n  useNewGame,\r\n  usePlayers,\r\n  useSpyMaster,\r\n  useEmails,\r\n} from \"../../contexts/DataContext\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport socket from \"../../socket\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    padding: \"2rem\",\r\n    marginTop: \"2rem\",\r\n  },\r\n  titleDivider: {\r\n    borderTop: `7px solid ${theme.palette.primary.main}`,\r\n    width: \"5rem\",\r\n    marginTop: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst NewGame = (props) => {\r\n  const classes = useStyles();\r\n\r\n  //Holds Game ID + Template for Passing Roles to Server\r\n  const [newGame, setNewGame] = useNewGame();\r\n\r\n  //Holds All Players + Roles\r\n  const [players] = usePlayers();\r\n\r\n  //Holds Selected SpyMaster\r\n  const [spyMaster, setSpyMaster] = useSpyMaster();\r\n\r\n  //Holds Emails to be Invited to Game\r\n  const [emails, setEmails] = useEmails();\r\n\r\n  let { id } = useParams();\r\n\r\n  // Goes back to the step of the host when page refreshes\r\n  useEffect(() => window.localStorage.setItem(\"newGame\", newGame), [newGame]);\r\n\r\n  const nextStep = async () => {\r\n    try {\r\n      if (newGame !== 1 || emails.length < 1) {\r\n        await setNewGame((prevState) => prevState + 1);\r\n      } else {\r\n        const getData = await axios.post(\"/send-email\", { emails, gameId: id });\r\n        if (getData.data.error) {\r\n          console.log(\"Error:\", getData.data.error);\r\n          return null;\r\n        }\r\n        await setEmails([]);\r\n        await setNewGame((prevState) => prevState + 1);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  //Sends Data to Start Game\r\n  const startGame = async () => {\r\n    try {\r\n      const setGame = (players, spyMaster) => {\r\n        let spyMasters = [spyMaster.blue, spyMaster.red];\r\n\r\n        let playerAssign = players.map((player) => {\r\n          if (spyMasters.includes(player.id)) {\r\n            return {\r\n              id: player.id,\r\n              name: player.name,\r\n              team: player.team,\r\n              spyMaster: true,\r\n            };\r\n          } else {\r\n            return {\r\n              id: player.id,\r\n              name: player.name,\r\n              team: player.team,\r\n              spyMaster: false,\r\n            };\r\n          }\r\n        });\r\n\r\n        return {\r\n          gameId: id,\r\n          players: playerAssign,\r\n        };\r\n      };\r\n\r\n      const gameDetails = await setGame(players, spyMaster);\r\n      console.log(\"Emitting start-game:\", gameDetails);\r\n      localStorage.removeItem(\"newGame\");\r\n      socket.emit(\"start-game\", gameDetails);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const newGameSteps = () => {\r\n    switch (newGame) {\r\n      case 1:\r\n        return <StepOne />;\r\n      case 2:\r\n        return <StepTwo />;\r\n      case 3:\r\n        return <StepThree />;\r\n      case 4:\r\n        return <StepThree />;\r\n      default:\r\n        return (\r\n          <h2>\r\n            Error. It is likely the New Game component is showing and it\r\n            shouldn't be.\r\n          </h2>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Card className={classes.card}>\r\n        <Box minHeight={400}>\r\n          <Typography align=\"center\" variant=\"h1\">\r\n            New game\r\n          </Typography>\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Divider className={classes.titleDivider} />\r\n          </Grid>\r\n          {newGameSteps()}\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            spacing={2}\r\n            alignItems=\"center\"\r\n          >\r\n            <Box mx={2}>\r\n              {newGame < 4 ? (\r\n                <Button variant=\"contained\" color=\"primary\" onClick={nextStep}>\r\n                  Next\r\n                </Button>\r\n              ) : (\r\n                //Needs Logic here to initiate final role allocation.\r\n                <Button variant=\"contained\" color=\"primary\" onClick={startGame}>\r\n                  Create Game\r\n                </Button>\r\n              )}\r\n            </Box>\r\n            <Box mx={2}>\r\n              {newGame !== 1 && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={() => {\r\n                    setNewGame((prevState) => prevState - 1);\r\n                    if (newGame === 4) {\r\n                      setSpyMaster({ blue: \"\", red: \"\" });\r\n                    }\r\n                  }}\r\n                >\r\n                  Back\r\n                </Button>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Box>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewGame;\r\n","import React from \"react\";\r\nimport StepTwo from \"./step 2/StepTwo\";\r\nimport { useHostName } from \"../../contexts/DataContext\";\r\nimport { useUser } from \"../../contexts/UserContext\";\r\nimport {\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    padding: \"2rem\",\r\n    marginTop: \"2rem\",\r\n  },\r\n  titleDivider: {\r\n    borderTop: `7px solid ${theme.palette.primary.main}`,\r\n    width: \"5rem\",\r\n    marginTop: \"1rem\",\r\n  },\r\n  host: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst WaitingRoom = (props) => {\r\n  const classes = useStyles();\r\n  const [hostName] = useHostName();\r\n  const [user] = useUser();\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Card className={classes.card}>\r\n        <Typography align=\"center\" variant=\"h1\">\r\n          Welcome {user.name}!\r\n        </Typography>\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          <Divider className={classes.titleDivider} />\r\n        </Grid>\r\n        <Box my={2}>\r\n          <Typography align=\"center\" variant=\"h3\">\r\n            Your host is:{\" \"}\r\n            <Box component=\"span\" className={classes.host}>\r\n              {hostName}\r\n            </Box>{\" \"}\r\n            <br />\r\n            Please wait while they assign the teams.\r\n          </Typography>\r\n        </Box>\r\n        <StepTwo />\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WaitingRoom;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  NavBar: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: theme.white,\r\n  },\r\n  NavBarWrap: {\r\n    width: \"90%\",\r\n    height: \"100%\",\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  Brand: {\r\n    textTransform: \"uppercase\",\r\n    letterSpacing: \"0.6rem\",\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"black\",\r\n    },\r\n  },\r\n  Scoreboard: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  BlueScore: (props) => ({\r\n    padding: \"10px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    color: props.currentTurn === \"blue\" ? theme.white : theme.blue.medium,\r\n    background: props.currentTurn === \"blue\" ? theme.blue.medium : \"none\",\r\n    borderRadius: \"5px\",\r\n    \"& h3\": {\r\n      margin: \"0.5rem\",\r\n      fontSize: \"1.5rem\",\r\n    },\r\n  }),\r\n  RedScore: (props) => ({\r\n    padding: \"10px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    color: props.currentTurn === \"red\" ? theme.white : theme.red.medium,\r\n    background: props.currentTurn === \"red\" ? theme.red.medium : \"none\",\r\n    borderRadius: \"5px\",\r\n    \"& h3\": {\r\n      margin: \"0.5rem\",\r\n      fontSize: \"1.5rem\",\r\n    },\r\n  }),\r\n  BlueTeam: {\r\n    color: theme.blue.medium,\r\n    marginRight: \"1.5rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  RedTeam: {\r\n    color: theme.red.medium,\r\n    marginLeft: \"1.5rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  SpyMasterText: {\r\n    fontWeight: 900,\r\n  },\r\n  BarControls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  NewGameButton: {\r\n    marginRight: \"2rem\",\r\n  },\r\n  EndGameButton: {\r\n    marginRight: \"2rem\",\r\n    backgroundColor: theme.red.medium,\r\n    color: theme.white,\r\n  },\r\n  Profile: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport { useHostId } from \"../../contexts/DataContext\";\r\nimport { useUser } from \"../../contexts/UserContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useStyles from \"./styles\";\r\nimport ProfileBar from \"../ProfileBar\";\r\n\r\nconst GameBar = (props) => {\r\n  const classes = useStyles(props);\r\n  const [hostId] = useHostId();\r\n  const [user] = useUser();\r\n\r\n  return (\r\n    <nav className={classes.NavBar}>\r\n      <Box className={classes.NavBarWrap}>\r\n        <Typography className={classes.Brand} variant=\"h3\">\r\n          <Link to=\"/\">Cluewords</Link>\r\n        </Typography>\r\n        <Box className={classes.Scoreboard}>\r\n          <Box className={classes.BlueTeam}>\r\n            <Box>\r\n              <Typography className={classes.SpyMasterText} variant=\"body1\">\r\n                SpyMaster - {props.teamList.blue.spyMaster}\r\n              </Typography>\r\n            </Box>\r\n            {props.teamList.blue.guesser.map((player, i) => (\r\n              <Typography key={i}>{player}</Typography>\r\n            ))}\r\n          </Box>\r\n          <Box className={classes.BlueScore}>\r\n            <Typography variant=\"h3\">{props.blueScore}</Typography>\r\n            <Typography>Blue Team</Typography>\r\n          </Box>\r\n          <Box display=\"flex\" justifyContent=\"center\" padding={\"0 10px\"}>\r\n            <Typography variant=\"h3\">-</Typography>\r\n          </Box>\r\n          <Box className={classes.RedScore}>\r\n            <Typography variant=\"h3\">{props.redScore}</Typography>\r\n            <Typography>Red Team</Typography>\r\n          </Box>\r\n          <Box className={classes.RedTeam}>\r\n            <Box>\r\n              <Typography className={classes.SpyMasterText} variant=\"body1\">\r\n                SpyMaster - {props.teamList.red.spyMaster}\r\n              </Typography>\r\n            </Box>\r\n            {props.teamList.red.guesser.map((player, i) => (\r\n              <Typography key={i}>{player}</Typography>\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n        <Box className={classes.BarControls}>\r\n          {user.id === hostId && (\r\n            <Button\r\n              className={classes.EndGameButton}\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              onClick={props.stopGame}\r\n              disabled={props.gameStatus === \"over\"}\r\n            >\r\n              End Game\r\n            </Button>\r\n          )}\r\n          <ProfileBar history={props.history} />\r\n        </Box>\r\n      </Box>\r\n    </nav>\r\n  );\r\n};\r\n\r\nGameBar.propTypes = {\r\n  gameStatus: PropTypes.string.isRequired,\r\n  currentTurn: PropTypes.string.isRequired,\r\n  redScore: PropTypes.number.isRequired,\r\n  blueScore: PropTypes.number.isRequired,\r\n  stopGame: PropTypes.func.isRequired,\r\n  isSpyMaster: PropTypes.bool.isRequired,\r\n  teamList: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default GameBar;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Messenger: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: theme.grey.superLight,\r\n    overflow: \"hidden\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    // borderRight: `4px solid ${theme.palette.secondary.main}`,\r\n    backgroundColor: \"#537895\",\r\n    backgroundImage: \"linear-gradient(0deg, #01579b 0%,  #039be5 74%)\",\r\n  },\r\n  MessageContainer: (props) => ({\r\n    padding: \"2rem\",\r\n    minHeight: props.isTurn ? \"calc(65% - 52px)\" : \"65%\",\r\n    maxHeight: props.isTurn ? \"calc(65% - 52px)\" : \"65%\",\r\n    overflow: \"auto\",\r\n  }),\r\n  Message: {\r\n    padding: \"0.8rem\",\r\n    width: \"auto\",\r\n  },\r\n  MessageSender: {\r\n    fontSize: \"0.9rem\",\r\n    marginBottom: \"0.5rem\",\r\n    color: theme.grey.light,\r\n    fontWeight: \"bold\",\r\n  },\r\n  MessageMsg: {\r\n    margin: 0,\r\n    padding: \"1rem\",\r\n    background: theme.grey.medium,\r\n    borderRadius: \"0px 15px 15px 15px\",\r\n    display: \"inline-block\",\r\n  },\r\n  MessageMe: {\r\n    padding: \"0.8rem\",\r\n    width: \"auto\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  MessageMeMsg: {\r\n    margin: 0,\r\n    padding: \"1rem\",\r\n    background: theme.red.medium,\r\n    borderRadius: \"15px 15px 0px 15px\",\r\n    color: theme.white,\r\n    display: \"inline-block\",\r\n  },\r\n  MessageInput: {\r\n    height: \"25%\",\r\n    padding: \"1rem 1.5rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  Alert: {\r\n    fontStyle: \"italic\",\r\n    color: theme.grey.light,\r\n  },\r\n  YourTurn: {\r\n    height: \"52px\",\r\n    padding: \"0.8rem\",\r\n    width: \"auto\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    background: theme.grey.dark,\r\n    color: theme.white,\r\n  },\r\n  ChatBar: {\r\n    width: \"100%\",\r\n    height: \"3rem\",\r\n    padding: \".5rem\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    color: \"white\",\r\n    zIndex: \"5\",\r\n    boxShadow: \"0 3px 10px 6px rgba(129,212,250,.6)\",\r\n  },\r\n  SendButton: {\r\n    marginLeft: \"1rem\",\r\n  },\r\n  DoneButton: {\r\n    marginTop: \"1rem\",\r\n  },\r\n  messageInputColor: {\r\n    color: theme.grey.light,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useStyles from \"./styles\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst Messenger = (props) => {\r\n  const classes = useStyles(props);\r\n  const elRef = React.useRef(null);\r\n  const [messageInput, setMessageInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    elRef.current.scrollTop = elRef.current.scrollHeight;\r\n  }, [props.messages]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // if no input, do not send\r\n    if (!messageInput || !messageInput.trim()) {\r\n      return;\r\n    }\r\n\r\n    props.sendMessage(messageInput);\r\n    setMessageInput(\"\");\r\n  };\r\n\r\n  const messageList = props.messages.map((m) => {\r\n    if (m.sender === \"alert\") {\r\n      return (\r\n        <div key={uuid()} className={classes.Message}>\r\n          <Typography className={classes.Alert}>{m.message}</Typography>\r\n        </div>\r\n      );\r\n    } else if (m.sender === props.name) {\r\n      return (\r\n        <div key={uuid()} className={classes.MessageMe}>\r\n          <Typography className={classes.MessageMeMsg}>{m.message}</Typography>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div key={uuid()} className={classes.Message}>\r\n          <Typography className={classes.MessageSender}>{m.sender}:</Typography>\r\n          <Typography className={classes.MessageMsg}>{m.message}</Typography>\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n  return (\r\n    <div className={classes.Messenger}>\r\n      <Box className={classes.ChatBar}>\r\n        <Typography variant=\"h5\">Chat</Typography>\r\n      </Box>\r\n      <List className={classes.MessageContainer} ref={elRef}>\r\n        {messageList}\r\n      </List>\r\n      {props.isTurn && (\r\n        <Typography className={classes.YourTurn}>Make Your Move!</Typography>\r\n      )}\r\n      <Divider />\r\n      <form className={classes.MessageInput} onSubmit={handleSubmit}>\r\n        <Box\r\n          width=\"100%\"\r\n          display=\"flex\"\r\n          justifyContent=\"space-around\"\r\n          alignItems=\"center\"\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            placeholder=\"Type here...\"\r\n            InputProps={{ className: classes.messageInputColor }}\r\n            value={messageInput}\r\n            onChange={(e) => setMessageInput(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.SendButton}\r\n          >\r\n            Send\r\n          </Button>\r\n        </Box>\r\n\r\n        {props.isSpyMaster && (\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={props.changeTurn}\r\n            disabled={!props.isTurn || props.timeOut}\r\n            className={classes.DoneButton}\r\n          >\r\n            Done\r\n          </Button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessenger.defaultProps = {\r\n  name: \"\",\r\n  isSpyMaster: false,\r\n  isTurn: false,\r\n  timeOut: false,\r\n};\r\n\r\nMessenger.propTypes = {\r\n  messages: PropTypes.array.isRequired,\r\n  sendMessage: PropTypes.func.isRequired,\r\n  name: PropTypes.string,\r\n  isSpyMaster: PropTypes.bool,\r\n  isTurn: PropTypes.bool,\r\n  changeTurn: PropTypes.func,\r\n  timeOut: PropTypes.bool,\r\n};\r\n\r\nexport default Messenger;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  playAgainButton: {\r\n    padding: \".5rem 1rem\",\r\n    fontSize: \"1.2rem\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport socket from \"../../socket\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst PlayAgain = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n\r\n  const gameId = params.id;\r\n  const handleNewGame = () => {\r\n    socket.emit(\"play-again\", gameId);\r\n    history.push(`/${gameId}`);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      onClick={handleNewGame}\r\n      className={classes.playAgainButton}\r\n    >\r\n      Play again\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default PlayAgain;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  popUpWindow: {\r\n    position: \"absolute\",\r\n    minWidth: \"400px\",\r\n    maxWidth: \"500px\",\r\n    height: \"50%\",\r\n    minHeight: \"400px\",\r\n    left: \"50%\",\r\n    top: \"40%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    zIndex: \"10\",\r\n  },\r\n  container: {\r\n    background: fade(theme.grey.mediumDark, 0.8),\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    zIndex: \"5\",\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n  },\r\n  skullIcon: {\r\n    width: \"15%\",\r\n  },\r\n  gameOver: {\r\n    fontSize: \"1.5rem\",\r\n    marginBottom: \".8rem\",\r\n  },\r\n  gameOverText: (props) => ({\r\n    color:\r\n      props.endGame.winner === \"Blue\" ? theme.blue.medium : theme.red.medium,\r\n  }),\r\n  redScore: {\r\n    color: theme.red.medium,\r\n  },\r\n  blueScore: {\r\n    color: theme.blue.medium,\r\n  },\r\n  newGameButton: {\r\n    padding: \".7rem 2.4rem\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Paper, Box, Typography } from \"@material-ui/core\";\r\nimport { useHostId } from \"../../contexts/DataContext\";\r\nimport { useUser } from \"../../contexts/UserContext\";\r\nimport PlayAgain from \"../PlayAgain\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst GameOver = (props) => {\r\n  const [hostId] = useHostId();\r\n  const [user] = useUser();\r\n  const classes = useStyles(props);\r\n  const {\r\n    popUpWindow,\r\n    container,\r\n    content,\r\n    skullIcon,\r\n    gameOver,\r\n    gameOverText,\r\n    redScore,\r\n    blueScore,\r\n  } = classes;\r\n\r\n  return (\r\n    <>\r\n      <Box className={container}>\r\n        <Paper className={popUpWindow}>\r\n          <Box className={content}>\r\n            <img\r\n              className={skullIcon}\r\n              src=\"/skull-and-crossbones.png\"\r\n              alt=\"game-over-icon\"\r\n            />\r\n            <Box my={3}>\r\n              <Typography className={gameOver} variant=\"h3\" align=\"center\">\r\n                Game over!\r\n              </Typography>\r\n              {props.endGame.winner !== \"No\" && (\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  {props.endGame.gameOverText}\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n            <Box>\r\n              {props.endGame.winner !== \"No\" ? (\r\n                <Typography variant=\"h3\" className={gameOverText}>\r\n                  {props.endGame.winner} wins\r\n                </Typography>\r\n              ) : (\r\n                <Typography variant=\"h3\">\r\n                  {props.endGame.gameOverText}\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n            <Box my={3}>\r\n              <Typography variant=\"h3\">\r\n                <Box variant=\"span\" display=\"inline\" className={blueScore}>\r\n                  {props.blueScore.toString()}\r\n                </Box>{\" \"}\r\n                :{\" \"}\r\n                <Box variant=\"span\" display=\"inline\" className={redScore}>\r\n                  {props.redScore.toString()}\r\n                </Box>\r\n              </Typography>\r\n            </Box>\r\n            <Box>{user.id === hostId && <PlayAgain />}</Box>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\nGameOver.propTypes = {\r\n  redScore: PropTypes.number.isRequired,\r\n  blueScore: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default GameOver;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Card: (props) => ({\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    background: theme.white,\r\n    cursor: props.clicked ? \"auto\" : \"pointer\",\r\n    transition: \"transform .2s\",\r\n    \"&:hover:not(.clicked)\": {\r\n      transform: \"scale(1.2)\",\r\n    },\r\n  }),\r\n  Red: (props) => ({\r\n    color: props.isSpyMaster ? theme.red.medium : theme.grey.dark,\r\n    \"&.clicked\": {\r\n      background: `linear-gradient(45deg, ${theme.red.medium} 50%, ${theme.red.light} 85%)`,\r\n      color: theme.white,\r\n    },\r\n  }),\r\n  Blue: (props) => ({\r\n    color: props.isSpyMaster ? theme.blue.medium : theme.grey.dark,\r\n    \"&.clicked\": {\r\n      background: `linear-gradient(45deg, ${theme.blue.medium} 50%, ${theme.blue.light} 85%)`,\r\n      color: theme.white,\r\n    },\r\n  }),\r\n  Innocent: (props) => ({\r\n    color: props.isSpyMaster ? theme.grey.mediumDark : theme.grey.dark,\r\n    \"&.clicked\": {\r\n      background: theme.grey.medium,\r\n      color: theme.grey.mediumDark,\r\n    },\r\n  }),\r\n  Assassin: {\r\n    color: theme.grey.dark,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst BoardCard = (props) => {\r\n  const classes = useStyles(props);\r\n\r\n  let styles = [`${classes.Card}`];\r\n  if (props.type === \"red\") {\r\n    styles.push(`${classes.Red}`);\r\n  } else if (props.type === \"blue\") {\r\n    styles.push(`${classes.Blue}`);\r\n  } else if (props.type === \"innocent\") {\r\n    styles.push(`${classes.Innocent}`);\r\n  } else {\r\n    styles.push(`${classes.Assassin}`);\r\n  }\r\n\r\n  if (props.clicked) {\r\n    styles.push(\"clicked\");\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      onClick={() => props.selectCard(props.cardIndex)}\r\n      className={styles.join(\" \")}\r\n    >\r\n      <Typography variant=\"h3\">{props.word}</Typography>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBoardCard.defaultProps = {\r\n  clicked: false,\r\n  isSpyMaster: false,\r\n};\r\n\r\nBoardCard.propTypes = {\r\n  word: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  clicked: PropTypes.bool.isRequired,\r\n  isSpyMaster: PropTypes.bool,\r\n};\r\n\r\nexport default BoardCard;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Board: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"relative\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    background: theme.grey.medium,\r\n    padding: \"4rem\",\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n  },\r\n  BoardCards: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(5, 1fr)\",\r\n    gridTemplateRows: \"repeat(5, 1fr)\",\r\n    gap: \"1rem\",\r\n  },\r\n  BoardBottom: {\r\n    paddingTop: \"20px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  Timer: (props) => ({\r\n    color: props.timer <= 10 ? theme.red.medium : theme.palette.primary.main,\r\n  }),\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport GameOver from \"../GameOver/GameOver\";\r\nimport BoardCard from \"./BoardCard\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Board = (props) => {\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.Board}>\r\n        {props.gameStatus === \"over\" && props.endGame && (\r\n          <GameOver\r\n            redScore={props.redScore}\r\n            blueScore={props.blueScore}\r\n            endGame={props.endGame}\r\n          />\r\n        )}\r\n        <Box className={classes.BoardCards}>\r\n          {props.board.map((card, idx) => (\r\n            <BoardCard\r\n              isSpyMaster={props.isSpyMaster}\r\n              key={idx}\r\n              cardIndex={idx}\r\n              word={card.word}\r\n              type={card.type}\r\n              clicked={card.clicked}\r\n              selectCard={props.selectCard}\r\n            />\r\n          ))}\r\n        </Box>\r\n        <Box className={classes.BoardBottom}>\r\n          <Typography variant=\"h1\" className={classes.Timer}>\r\n            Time Left: {props.timer}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nBoard.defaultProps = {\r\n  isSpyMaster: false,\r\n};\r\n\r\nBoard.propTypes = {\r\n  board: PropTypes.array.isRequired,\r\n  gameStatus: PropTypes.string.isRequired,\r\n  isSpyMaster: PropTypes.bool,\r\n  redScore: PropTypes.number.isRequired,\r\n  blueScore: PropTypes.number.isRequired,\r\n  endGame: PropTypes.object.isRequired,\r\n  selectCard: PropTypes.func.isRequired,\r\n  timer: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Board;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  Game: {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    display: \"grid\",\r\n    gridTemplateAreas: `\r\n      'Gamebar Gamebar'\r\n      'Messenger Board'\r\n    `,\r\n    gridTemplateColumns: \"400px 1fr\",\r\n    gridTemplateRows: \"12vh 88vh\",\r\n  },\r\n  Gamebar: {\r\n    gridArea: \"Gamebar\",\r\n  },\r\n  Messenger: {\r\n    gridArea: \"Messenger\",\r\n  },\r\n  Board: {\r\n    gridArea: \"Board\",\r\n  },\r\n  Snackbar: {\r\n    fontSize: \"2rem\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GameBar from \"../../components/GameBar\";\r\nimport Messenger from \"../../components/Messenger\";\r\nimport Board from \"../../components/Board\";\r\nimport socket from \"../../socket\";\r\nimport useStyles from \"./styles\";\r\nimport { useGameStatus } from \"../../contexts/GameContext\";\r\nimport {\r\n  useSnackbarOpen,\r\n  useSnackbarMessage,\r\n} from \"../../contexts/SnackbarContext\";\r\n\r\nconst Game = (props) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState(\"\");\r\n  const [team, setTeam] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [board, setBoard] = useState([]);\r\n  const [isSpyMaster, setIsSpyMaster] = useState(false);\r\n  const [currentTurn, setCurrentTurn] = useState(\"\");\r\n  const [redScore, setRedScore] = useState(0);\r\n  const [blueScore, setBlueScore] = useState(0);\r\n  const [teamList, setTeamList] = useState({\r\n    blue: {\r\n      spyMaster: \"\",\r\n      guesser: [],\r\n    },\r\n    red: {\r\n      spyMaster: \"\",\r\n      guesser: [],\r\n    },\r\n  });\r\n  const [endGame, setEndGame] = useState({ winner: \"\", gameOverTest: \"\" });\r\n  const [timer, setTimer] = useState(60);\r\n  const [gameStatus, setGameStatus] = useGameStatus();\r\n  const [, setSnackbarOpen] = useSnackbarOpen();\r\n  const [, setSnackbarMessage] = useSnackbarMessage();\r\n\r\n  const gameId = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    // join the match\r\n    socket.emit(\"init-game\", { gameId }, (recv) => {\r\n      console.log(\"Game State:\", recv);\r\n      setTeamList(recv.state.teamList);\r\n      setName(recv.name);\r\n      setMessages(recv.messages);\r\n      setBoard(recv.state.board);\r\n      setBlueScore(recv.state.blueTeam.points);\r\n      setRedScore(recv.state.redTeam.points);\r\n      setEndGame(recv.state.endGame);\r\n\r\n      // search game stare to find role of this user\r\n      const redPlayers = recv.state.redTeam.players;\r\n      const bluePlayers = recv.state.blueTeam.players;\r\n\r\n      const redIdx = redPlayers.findIndex((p) => p.name === recv.name);\r\n      const blueIdx = bluePlayers.findIndex((p) => p.name === recv.name);\r\n\r\n      if (redIdx > -1) {\r\n        setTeam(\"red\");\r\n\r\n        if (redPlayers[redIdx].role === \"spy-master\") {\r\n          setIsSpyMaster(true);\r\n        }\r\n      } else if (blueIdx > -1) {\r\n        setTeam(\"blue\");\r\n\r\n        if (bluePlayers[blueIdx].role === \"spy-master\") {\r\n          setIsSpyMaster(true);\r\n        }\r\n      }\r\n      // set current state of the game\r\n      setCurrentTurn(recv.state.turn);\r\n    });\r\n\r\n    socket.on(\"update-game\", (recv) => {\r\n      console.log(\"Updated Game State:\", recv);\r\n\r\n      // set current state of the game\r\n      setGameStatus(recv.gameStatus);\r\n      setBoard(recv.board);\r\n      setCurrentTurn(recv.turn);\r\n      setRedScore(recv.redTeam.points);\r\n      setBlueScore(recv.blueTeam.points);\r\n      if (recv.gameStatus === \"over\") {\r\n        setEndGame(recv.endGame);\r\n      }\r\n    });\r\n\r\n    socket.on(\"new-message\", (recv) => {\r\n      setMessages((prevMessages) => [...prevMessages, recv]);\r\n    });\r\n\r\n    socket.on(\"tick\", (recv) => {\r\n      setTimer(recv);\r\n    });\r\n\r\n    socket.on(\"time-out\", () => {\r\n      setSnackbarMessage(\"Time out! Swapping turns...\");\r\n      setSnackbarOpen(true);\r\n    });\r\n\r\n    return () => {\r\n      setGameStatus(\"setup\");\r\n      socket.off(\"new-message\");\r\n      socket.off(\"tick\");\r\n      socket.off(\"time-out\");\r\n      socket.off(\"update-game\");\r\n    };\r\n  }, [gameId, setGameStatus, setSnackbarOpen, setSnackbarMessage, setEndGame]);\r\n\r\n  const sendMessage = (msg) => {\r\n    const msgData = {\r\n      sender: name,\r\n      message: msg,\r\n    };\r\n\r\n    // send message to the server\r\n    socket.emit(\"message\", {\r\n      gameId,\r\n      msgData,\r\n    });\r\n  };\r\n\r\n  const selectCard = (cardIndex) => {\r\n    if (team !== currentTurn) return;\r\n    if (isSpyMaster === true) return;\r\n    if (board[cardIndex].clicked === true) return;\r\n    socket.emit(\"move\", { gameId, currentTurn, cardIndex });\r\n  };\r\n\r\n  const changeTurn = () => {\r\n    socket.emit(\"change-turn\", {\r\n      gameId,\r\n    });\r\n  };\r\n\r\n  const stopGame = () => {\r\n    // send message to the server\r\n    socket.emit(\"end-game\", {\r\n      gameId,\r\n      winner: \"none\",\r\n      method: \"manual\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Game}>\r\n      <div className={classes.Gamebar}>\r\n        <GameBar\r\n          gameStatus={gameStatus}\r\n          currentTurn={currentTurn}\r\n          redScore={redScore}\r\n          blueScore={blueScore}\r\n          stopGame={stopGame}\r\n          isSpyMaster={isSpyMaster}\r\n          teamList={teamList}\r\n          history={props.history}\r\n        />\r\n      </div>\r\n      <div className={classes.Messenger}>\r\n        <Messenger\r\n          messages={messages}\r\n          sendMessage={sendMessage}\r\n          name={name}\r\n          isSpyMaster={isSpyMaster}\r\n          isTurn={team === currentTurn}\r\n          changeTurn={changeTurn}\r\n          timeOut={timer === 0}\r\n        />\r\n      </div>\r\n      <div className={classes.Board}>\r\n        <Board\r\n          gameStatus={gameStatus}\r\n          board={board}\r\n          isSpyMaster={isSpyMaster}\r\n          redScore={redScore}\r\n          blueScore={blueScore}\r\n          endGame={endGame}\r\n          selectCard={selectCard}\r\n          timer={timer}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useGameStatus } from \"../contexts/GameContext\";\r\nimport { useHostId, useNewGame } from \"../contexts/DataContext\";\r\nimport { useUser } from \"../contexts/UserContext\";\r\nimport {\r\n  useSnackbarOpen,\r\n  useSnackbarMessage,\r\n} from \"../contexts/SnackbarContext\";\r\nimport NewGame from \"../components/new game/NewGame\";\r\nimport WaitingRoom from \"../components/new game/WaitingRoom\";\r\nimport Game from \"./Game\";\r\nimport socket from \"../socket\";\r\nimport Messenger from \"../components/Messenger\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  WaitingRoom: {\r\n    width: \"100%\",\r\n    height: \"88vh\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"400px 1fr\",\r\n    gridTemplateRows: \"auto\",\r\n  },\r\n}));\r\n\r\nconst GameSetup = (props) => {\r\n  const classes = useStyles();\r\n  const [gameStatus, setGameStatus] = useGameStatus();\r\n  const [, setSnackbarOpen] = useSnackbarOpen();\r\n  const [, setSnackbarMessage] = useSnackbarMessage();\r\n  const [hostId] = useHostId();\r\n  const [messages, setMessages] = useState([]);\r\n  const [, setNewGame] = useNewGame();\r\n  const [user] = useUser();\r\n  const gameId = props.match.params.id;\r\n\r\n  // When host ends the game and clicks play again button, this socket fetches the reset version fo the same game with the same players\r\n  useEffect(() => {\r\n    socket.on(\"play-again\", (currentGame) => {\r\n      console.log(\"Play-again:\", currentGame.players);\r\n      setGameStatus(currentGame.gameStatus);\r\n      setNewGame(1);\r\n    });\r\n  }, [setGameStatus, setNewGame]);\r\n\r\n  // Fetches the game status to update the component according to the gameStatus\r\n  useEffect(() => {\r\n    socket.on(\"error\", () => {\r\n      setSnackbarMessage(\"Game does not exist!\");\r\n      setSnackbarOpen(true);\r\n      props.history.push(\"/\");\r\n    });\r\n  }, [props.history, setSnackbarMessage, setSnackbarOpen]);\r\n\r\n  useEffect(() => {\r\n    //Shows players now assigned on teams and roles, ALSO - change gameStatus now === \"running\"\r\n    socket.on(\"update-roles\", (game) => {\r\n      console.log(\"socket-on-update-roles\", game);\r\n      setGameStatus(game.gameStatus);\r\n    });\r\n  }, [gameStatus, setGameStatus]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"new-message\", (recv) => {\r\n      setMessages((prevMessages) => [...prevMessages, recv]);\r\n    });\r\n  }, []);\r\n\r\n  //Send message event\r\n  const sendMessage = (msg) => {\r\n    const msgData = {\r\n      sender: user.name,\r\n      message: msg,\r\n    };\r\n\r\n    // send message to the server\r\n    socket.emit(\"message\", {\r\n      gameId,\r\n      msgData,\r\n    });\r\n  };\r\n\r\n  const gameJourney = () => {\r\n    if (user.id === hostId) {\r\n      return <NewGame value={props} />;\r\n    } else {\r\n      return <WaitingRoom value={props} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.WaitingRoom}>\r\n      {gameStatus === \"setup\" ? (\r\n        <Messenger\r\n          messages={messages}\r\n          sendMessage={sendMessage}\r\n          name={user.name}\r\n        />\r\n      ) : null}\r\n      <div>{gameStatus === \"setup\" ? gameJourney() : <Game {...props} />}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameSetup;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useUser } from \"../../contexts/UserContext\";\r\nimport axios from \"axios\";\r\n\r\nconst EditNameDialog = (props) => {\r\n  const [user, setUser] = useUser();\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const result = await axios.post(`/edit-profile/${user.id}`, {\r\n        name,\r\n      });\r\n      if (result) {\r\n        setName(result.data.name);\r\n        setUser((prevState) => ({\r\n          ...prevState,\r\n          name: result.data.name,\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    props.closeDialog();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setName(user.name);\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <Dialog open={props.open}>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogContent>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            label=\"Name:\"\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"Enter your name here\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            // error={errors.name !== undefined}\r\n            // helperText={errors.name}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button type=\"submit\" color=\"primary\" autoFocus>\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditNameDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Container,\r\n  Avatar,\r\n  makeStyles,\r\n  Typography,\r\n  Divider,\r\n  Box,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n  Input,\r\n} from \"@material-ui/core\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport axios from \"axios\";\r\nimport { useUser } from \"../contexts/UserContext\";\r\nimport EditNameDialog from \"../components/EditNameDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  card: {\r\n    width: \"70%\",\r\n    height: \"70vh\",\r\n    margin: \"0 auto\",\r\n    padding: theme.spacing(4),\r\n  },\r\n  heading: {\r\n    textAlign: \"center\",\r\n    fontSize: \"2rem\",\r\n  },\r\n  divider: {\r\n    border: `5px solid ${theme.palette.primary.main}`,\r\n    marginTop: theme.spacing(1),\r\n    width: \"30%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  avatar: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  editIcon: {\r\n    // margin: \"0 .5rem\",\r\n  },\r\n  fileInput: {\r\n    display: \"none\",\r\n  },\r\n  userDetails: {\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n  imageDialog: {\r\n    minWidth: \"30vw\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  updateUrlBtn: {\r\n    margin: \"0 1rem\",\r\n  },\r\n}));\r\n\r\nconst ProfileSettings = () => {\r\n  const [user, setUser] = useUser();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [openEditNameDialog, setOpenEditNameDialog] = useState(false);\r\n  const [profileImageFile, setProfileImageFile] = useState(null);\r\n  // const [profileImageUrlInput, setProfileImageUrlInput] = useState(\"\");\r\n  const [profileImageUrl, setProfileImageUrl] = useState(\"\");\r\n\r\n  const handleClose = async () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const closeEditNameDialog = () => {\r\n    setOpenEditNameDialog(false);\r\n  };\r\n\r\n  const handleFileInput = async (e) => {\r\n    setProfileImageFile(e.target.files[0]);\r\n  };\r\n\r\n  // Image is uploaded to AWS S3 using form Data\r\n  const handleFileUpload = async () => {\r\n    if (profileImageFile) {\r\n      const data = new FormData();\r\n      data.append(\"profileImage\", profileImageFile, profileImageFile.name);\r\n\r\n      try {\r\n        const result = await axios.post(`/edit-profile/${user.id}`, data);\r\n        if (result) {\r\n          const { location, token } = result.data;\r\n\r\n          localStorage.setItem(\"token\", token);\r\n          setProfileImageUrl(location);\r\n\r\n          // Updates the UserContext\r\n          setUser((prevState) => ({\r\n            ...prevState,\r\n            profileImageLocation: location,\r\n          }));\r\n          setOpenDialog(false);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  // // Input handler using image Url\r\n  // const handleImageUrlInput = (e) => {\r\n  //   setProfileImageUrlInput(e.target.value);\r\n  // };\r\n\r\n  // Sets the Image location for profile on the page\r\n  useEffect(() => {\r\n    if (user) {\r\n      setProfileImageUrl(user.profileImageLocation);\r\n    }\r\n  }, [user]);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <Box width=\"50%\" mx=\"auto\">\r\n          <Typography component=\"h3\" className={classes.heading}>\r\n            Profile Settings\r\n          </Typography>\r\n          <Divider className={classes.divider}></Divider>\r\n        </Box>\r\n        <Box mx=\"auto\" mt=\"2rem\">\r\n          <Grid container direction=\"row\" justify=\"center\">\r\n            <Grid item xs={6}>\r\n              <Box width={200} height={200} mx=\"auto\">\r\n                <Avatar\r\n                  alt=\"abc\"\r\n                  src={profileImageUrl ? profileImageUrl : \"\"}\r\n                  className={classes.avatar}\r\n                />\r\n                <Box\r\n                  onClick={() => setOpenDialog(true)}\r\n                  textAlign=\"center\"\r\n                  mt={2}\r\n                >\r\n                  <Button variant=\"outlined\" color=\"primary\">\r\n                    <EditOutlinedIcon\r\n                      color=\"primary\"\r\n                      className={classes.editIcon}\r\n                    />\r\n                    Profile Photo\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Box className={classes.userDetails}>\r\n                <List>\r\n                  <ListItem>\r\n                    <Typography>\r\n                      <strong>Name:</strong>{\" \"}\r\n                      {user ? user.name : \"Not available\"}\r\n                    </Typography>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() => setOpenEditNameDialog(true)}\r\n                    >\r\n                      <EditOutlinedIcon className={classes.editIcon} />\r\n                    </Button>\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <Typography>\r\n                      <strong>Email:</strong>{\" \"}\r\n                      {user ? user.email : \"Not available\"}\r\n                    </Typography>\r\n                  </ListItem>\r\n                </List>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Card>\r\n      <Dialog open={openDialog} onClose={handleClose}>\r\n        <DialogTitle>Change Photo</DialogTitle>\r\n        <DialogContent className={classes.imageDialog}>\r\n          <form>\r\n            <Input\r\n              type=\"file\"\r\n              name=\"profileImage\"\r\n              id=\"input-file\"\r\n              onChange={handleFileInput}\r\n              className={classes.fileInput}\r\n            />\r\n            <Button htmlFor=\"input-file\" component=\"label\" color=\"secondary\">\r\n              {profileImageFile ? profileImageFile.name : \"Select File\"}\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              component=\"button\"\r\n              color=\"primary\"\r\n              onClick={handleFileUpload}\r\n              className={classes.uploadImage}\r\n            >\r\n              Upload\r\n            </Button>\r\n          </form>\r\n          {/* <Typography>OR</Typography> */}\r\n          {/* <form>\r\n              <Input\r\n                className={classes.urlInput}\r\n                type=\"text\"\r\n                name=\"file\"\r\n                id=\"image-url\"\r\n                value={profileImageUrlInput}\r\n                placeholder=\"Enter url of image\"\r\n                onChange={handleImageUrlInput}\r\n              />\r\n              \r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  component=\"button\"\r\n                  color=\"primary\"\r\n                  className={classes.updateUrlBtn}\r\n                >\r\n                  Update URL\r\n                </Button>\r\n              \r\n            </form> */}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Done\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <EditNameDialog\r\n        open={openEditNameDialog}\r\n        closeDialog={closeEditNameDialog}\r\n        title=\"Edit Name\"\r\n      ></EditNameDialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfileSettings;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport decode from \"jwt-decode\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport GlobalSnackbar from \"./components/GlobalSnackbar\";\r\nimport Landing from \"./pages/Landing\";\r\nimport Register from \"./pages/Register\";\r\nimport Login from \"./pages/Login\";\r\nimport GameSetup from \"./pages/GameSetup\";\r\nimport ProfileSettings from \"./pages/ProfileSettings\";\r\nimport { useUser } from \"./contexts/UserContext\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst App = () => {\r\n  const [, setUser] = useUser();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const getProfile = async (decoded) => {\r\n    try {\r\n      const result = await axios.get(`/profile/${decoded.id}`);\r\n      const { id, email, name, profileImageLocation } = result.data;\r\n      setUser({\r\n        id,\r\n        email,\r\n        name,\r\n        profileImageLocation,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const onLoad = async () => {\r\n      // check if token already set, if so assign user data to context\r\n      const token = Cookies.get(\"token\");\r\n\r\n      if (token !== undefined) {\r\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n        const decoded = decode(token);\r\n        await getProfile(decoded);\r\n      } else {\r\n        setUser(null);\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n      }\r\n\r\n      setIsLoading(false);\r\n    }\r\n\r\n    onLoad();\r\n  }, [setUser]);\r\n\r\n  return (\r\n    !isLoading && (\r\n      <BrowserRouter>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/edit-profile\"\r\n            component={ProfileSettings}\r\n          />\r\n          <PrivateRoute exact path=\"/:id\" component={GameSetup} />\r\n          <Route exact path=\"/\" component={Landing} />\r\n        </Switch>\r\n        <GlobalSnackbar />\r\n      </BrowserRouter>\r\n    )\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\",\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { MuiThemeProvider } from \"@material-ui/core\";\r\nimport { DataProvider } from \"./contexts/DataContext\";\r\nimport { GameProvider } from \"./contexts/GameContext\";\r\nimport { UserProvider } from \"./contexts/UserContext\";\r\nimport { SnackbarProvider } from \"./contexts/SnackbarContext\";\r\nimport { theme } from \"./themes/theme\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <DataProvider>\r\n    <GameProvider>\r\n      <UserProvider>\r\n        <SnackbarProvider>\r\n          <MuiThemeProvider theme={theme}>\r\n            <App />\r\n          </MuiThemeProvider>\r\n        </SnackbarProvider>\r\n      </UserProvider>\r\n    </GameProvider>\r\n  </DataProvider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}